/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var classified = ee.Image("users/gsmarshall/manchester_class"),
    testingPartition = ee.FeatureCollection("users/gsmarshall/greenspace_manch_validation"),
    testingPartition60 = ee.FeatureCollection("users/gsmarshall/greenspace_validation_60");
/***** End of imports. If edited, may not auto-convert in the playground. *****/
var classparams = {"opacity":1,"bands":["classification"],"min":1,"max":6,"palette":["33a02c","b2df8a","d20606","6b6687","ffeca5","2b32ff"]};

Map.addLayer(classified, classparams, "classified");

// *************************** accuracy assessment ***********************************
// import validation points for test region
// validation points were created from a random subset of 30% the manually collected training points, 
// and can be accessed in Earth Engine at 'users/gsmarshall/greenspace_manch_validation'
 
// import classified image for test region of Manchester, NH
// image was preprocessed and classified using the same code as in the class ImageClass in server.js
// Remap supervised classification to boolean image - green vs else
var green = classified.remap([1,2,3,4,5,6], [1,0,0,0,0,0]);

// Remap validation points
var boolean_pts = testingPartition60.remap([1,2,3,4,5,6], [1,0,0,0,0,0], 'Class');

// Add layer to the map to inspect
Map.addLayer(green, {palette: ['#000000', '#00FFFF']}, 'woodlots',0);
Map.addLayer(boolean_pts, {color: '#00FF00'}, 'validation pts',0);

// reduce regions captures classified value (as the 'sum' reducer) so that we can compare to the 
// "true" value stored in the Class variable
var classMatrix = green.reduceRegions(boolean_pts, ee.Reducer.sum(), 1);
var lcMatrix = classified.reduceRegions(testingPartition60, ee.Reducer.sum(), 1);

Export.table.toDrive(classMatrix,
"class_confusion_matrix",
"class_confusion_matrix");

Export.table.toDrive(lcMatrix,
"landcover_confusion_matrix",
"landcover_confusion_matrix");
